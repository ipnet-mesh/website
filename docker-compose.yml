services:

  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8883:8883"  # MQTT over TLS
      - "8080:8080"  # Traefik dashboard
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_static.yml:/etc/traefik/static/sites.yml:ro
      - traefik-acme:/acme
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik/static
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.mqtt.address=:8883
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.cloudflare.acme.storage=/acme/acme.json
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --log.level=INFO
      - --log.format=common
      - --accesslog=true
      - --accesslog.format=common
    labels:
      - "traefik.enable=false"
      # - "traefik.http.routers.traefik.rule=Host(`traefik.ipnt.uk`)"
      # - "traefik.http.routers.traefik.entrypoints=websecure"
      # - "traefik.http.routers.traefik.tls.certresolver=cloudflare"
      # - "traefik.http.routers.traefik.service=api@internal"

  website:
    image: ghcr.io/ipnet-mesh/website:main
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
    volumes:
      - ./assets/data:/app/assets/data:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=Host(`beta.ipnt.uk`)"
      - "traefik.http.routers.website.entrypoints=websecure"
      - "traefik.http.routers.website.tls.certresolver=cloudflare"
      - "traefik.http.services.website.loadbalancer.server.port=5000"

  mosquitto:
    image: eclipse-mosquitto:2.0
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mosquitto/acl.conf:/mosquitto/config/acl.conf:ro
      - ./mosquitto/passwd:/mosquitto/config/passwd:ro
      - mosquitto-data:/mosquitto/data
    labels:
      - "traefik.enable=true"
      # MQTT over TLS (8883) - Traefik terminates TLS and forwards to plain MQTT
      - "traefik.tcp.routers.mqtt-tls.rule=HostSNI(`mqtt.ipnt.uk`)"
      - "traefik.tcp.routers.mqtt-tls.entrypoints=mqtt"
      - "traefik.tcp.routers.mqtt-tls.tls.certresolver=cloudflare"
      - "traefik.tcp.routers.mqtt-tls.service=mqtt-tls"
      - "traefik.tcp.services.mqtt-tls.loadbalancer.server.port=1883"
      # MQTT WebSockets (WSS)
      - "traefik.http.routers.mqtt-ws.rule=Host(`mqtt.ipnt.uk`) && Path(`/mqtt`)"
      - "traefik.http.routers.mqtt-ws.entrypoints=websecure"
      - "traefik.http.routers.mqtt-ws.tls.certresolver=cloudflare"
      - "traefik.http.services.mqtt-ws.loadbalancer.server.port=8080"

volumes:
  traefik-acme:
  mosquitto-data:
